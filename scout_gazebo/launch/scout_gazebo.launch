<launch>
    <!--- Sim Time -->
    <!-- <param name="/use_sim_time" value="true" /> -->

    <arg name = "model_xacro" default = "$(find scout_gazebo)/urdf/base.xacro" />
    <!-- 将 Urdf 文件的内容加载到参数服务器 -->
    <param name="robot_description" command="$(find xacro)/xacro $(arg model_xacro)" />
    <!-- Launch  the joint state publisher -->
    <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" ></node>
    <!-- Launch  the robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />


    <!-- Loading rviz files -->
    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find scout_gazebo)/config/show_robot.rviz" />  -->
    
    <!-- 在 gazebo 中启动一个环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
        <arg name="world_name" value="$(find scout_gazebo)/worlds/office.world" /> 
    </include>
    <!-- 在 gazebo 中加载机器人模型  -->
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model scout -param robot_description"  />  

     <!--加载关节控制器yaml文件-->
    <rosparam file="$(find scout_gazebo)/config/velodyne_controller.yaml" command="load"/>
     <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/scout_v2" args="swiveljoint_state_controller swiveljoint1_velocity_controller  --shutdown-timeout 30"/>
</launch>
